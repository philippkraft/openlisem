#############################################################################
# Makefile for building: ifacebasic
# Generated by qmake (2.01a) (Qt 4.6.2) on: Tue Mar 2 23:23:26 2010
# Project:  openlisem.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"c:\Qt\4.6.2\include\QtCore" -I"c:\Qt\4.6.2\include\QtGui" -I"c:\Qt\4.6.2\include" -I"c:\Qt\4.6.2\include\ActiveQt" -I"release" -I"." -I"c:\Qt\4.6.2\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -mthreads -Wl -Wl,-subsystem,windows
LIBS        =        -L"c:\Qt\4.6.2\lib" -lmingw32 -lqtmain -Ld:\prgc\libcsfs\release -llibcsfs -lQtGui4 -lQtCore4 
QMAKE         = c:\qt\4.6.2\bin\qmake
IDC           = c:\Qt\4.6.2\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = reportfile.cpp \
		runfile.cpp \
		CsfMap.cpp \
		DataInit.cpp \
		channelflow.cpp \
		erosion.cpp \
		infiltration.cpp \
		kinematic.cpp \
		mmath.cpp \
		overlandflow.cpp \
		rainintc.cpp \
		surfstor.cpp \
		model.cpp \
		main.cpp \
		ifacebasic.cpp release\moc_model.cpp \
		release\moc_ifacebasic.cpp
OBJECTS       = release/reportfile.o \
		release/runfile.o \
		release/CsfMap.o \
		release/DataInit.o \
		release/channelflow.o \
		release/erosion.o \
		release/infiltration.o \
		release/kinematic.o \
		release/mmath.o \
		release/overlandflow.o \
		release/rainintc.o \
		release/surfstor.o \
		release/model.o \
		release/main.o \
		release/ifacebasic.o \
		release/moc_model.o \
		release/moc_ifacebasic.o
DIST          = 
QMAKE_TARGET  = ifacebasic
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = ifacebasic.exe
DESTDIR_TARGET = release\ifacebasic.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_ifacebasic.h $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.ifacebasic.Release  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -win32 -o Makefile.Release openlisem.pro

dist:
	$(ZIP) ifacebasic.zip $(SOURCES) $(DIST) openlisem.pro c:\Qt\4.6.2\mkspecs\qconfig.pri c:\Qt\4.6.2\mkspecs\features\qt_functions.prf c:\Qt\4.6.2\mkspecs\features\qt_config.prf c:\Qt\4.6.2\mkspecs\features\exclusive_builds.prf c:\Qt\4.6.2\mkspecs\features\default_pre.prf c:\Qt\4.6.2\mkspecs\features\win32\default_pre.prf c:\Qt\4.6.2\mkspecs\features\release.prf c:\Qt\4.6.2\mkspecs\features\debug_and_release.prf c:\Qt\4.6.2\mkspecs\features\default_post.prf c:\Qt\4.6.2\mkspecs\features\win32\default_post.prf c:\Qt\4.6.2\mkspecs\features\build_pass.prf c:\Qt\4.6.2\mkspecs\features\win32\rtti.prf c:\Qt\4.6.2\mkspecs\features\win32\exceptions.prf c:\Qt\4.6.2\mkspecs\features\win32\stl.prf c:\Qt\4.6.2\mkspecs\features\shared.prf c:\Qt\4.6.2\mkspecs\features\warn_on.prf c:\Qt\4.6.2\mkspecs\features\qt.prf c:\Qt\4.6.2\mkspecs\features\win32\thread.prf c:\Qt\4.6.2\mkspecs\features\moc.prf c:\Qt\4.6.2\mkspecs\features\win32\windows.prf c:\Qt\4.6.2\mkspecs\features\resources.prf c:\Qt\4.6.2\mkspecs\features\uic.prf c:\Qt\4.6.2\mkspecs\features\yacc.prf c:\Qt\4.6.2\mkspecs\features\lex.prf c:\Qt\4.6.2\mkspecs\features\include_source_dir.prf c:\Qt\4.6.2\lib\qtmain.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\reportfile.o release\runfile.o release\CsfMap.o release\DataInit.o release\channelflow.o release\erosion.o release\infiltration.o release\kinematic.o release\mmath.o release\overlandflow.o release\rainintc.o release\surfstor.o release\model.o release\main.o release\ifacebasic.o release\moc_model.o release\moc_ifacebasic.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_model.cpp release/moc_ifacebasic.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release\moc_model.cpp release\moc_ifacebasic.cpp
release/moc_model.cpp: csfmap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		mmath.h \
		error.h \
		model.h
	C:/Qt/4.6.2/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 model.h -o release\moc_model.cpp

release/moc_ifacebasic.cpp: ui_ifacebasic.h \
		model.h \
		csfmap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		mmath.h \
		error.h \
		ifacebasic.h
	C:/Qt/4.6.2/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 ifacebasic.h -o release\moc_ifacebasic.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_ifacebasic.h
compiler_uic_clean:
	-$(DEL_FILE) ui_ifacebasic.h
ui_ifacebasic.h: ifacebasic.ui
	c:\Qt\4.6.2\bin\uic.exe ifacebasic.ui -o ui_ifacebasic.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 



####### Compile

release/reportfile.o: reportfile.cpp model.h \
		csfmap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		mmath.h \
		error.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\reportfile.o reportfile.cpp

release/runfile.o: runfile.cpp model.h \
		csfmap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		mmath.h \
		error.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\runfile.o runfile.cpp

release/CsfMap.o: CsfMap.cpp CsfMap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		error.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\CsfMap.o CsfMap.cpp

release/DataInit.o: DataInit.cpp model.h \
		csfmap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		mmath.h \
		error.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\DataInit.o DataInit.cpp

release/channelflow.o: channelflow.cpp model.h \
		csfmap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		mmath.h \
		error.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\channelflow.o channelflow.cpp

release/erosion.o: erosion.cpp model.h \
		csfmap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		mmath.h \
		error.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\erosion.o erosion.cpp

release/infiltration.o: infiltration.cpp model.h \
		csfmap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		mmath.h \
		error.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\infiltration.o infiltration.cpp

release/kinematic.o: kinematic.cpp model.h \
		csfmap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		mmath.h \
		error.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\kinematic.o kinematic.cpp

release/mmath.o: mmath.cpp model.h \
		csfmap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		mmath.h \
		error.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\mmath.o mmath.cpp

release/overlandflow.o: overlandflow.cpp model.h \
		csfmap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		mmath.h \
		error.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\overlandflow.o overlandflow.cpp

release/rainintc.o: rainintc.cpp model.h \
		csfmap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		mmath.h \
		error.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\rainintc.o rainintc.cpp

release/surfstor.o: surfstor.cpp model.h \
		csfmap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		mmath.h \
		error.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\surfstor.o surfstor.cpp

release/model.o: model.cpp ifacebasic.h \
		ui_ifacebasic.h \
		model.h \
		csfmap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		mmath.h \
		error.h \
		global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\model.o model.cpp

release/main.o: main.cpp ifacebasic.h \
		ui_ifacebasic.h \
		model.h \
		csfmap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		mmath.h \
		error.h \
		global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/ifacebasic.o: ifacebasic.cpp ifacebasic.h \
		ui_ifacebasic.h \
		model.h \
		csfmap.h \
		csf.h \
		csftypes.h \
		csfattr.h \
		mmath.h \
		error.h \
		global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\ifacebasic.o ifacebasic.cpp

release/moc_model.o: release/moc_model.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_model.o release\moc_model.cpp

release/moc_ifacebasic.o: release/moc_ifacebasic.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_ifacebasic.o release\moc_ifacebasic.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

